@charset "UTF-8";

/////////////////////////////////// 自定义样式工具 ///////////////////////////////////

// 三角小箭头
.arr-init(@position, @margin, @pseudo_elements) {
	@select: ~":@{pseudo_elements}";
	&@{select} {
		content: "";
		display: block;
		width: 0;
		height: 0;
		position: absolute;
		top: extract(@position, 1);
		right: extract(@position, 2);
		bottom: extract(@position, 3);
		left: extract(@position, 4);
		margin: @margin;
	}
}
.larr(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-right-color: extract(@color, 1);
		_border-top-color: extract(@color, 2); //为了兼容 IE6，可以将其设置为与背景颜色相同
		_border-bottom-color: extract(@color, 2);
	}
}
.larr(@color, @width, @height, @pseudo_elements: before) {
	@select: ~":@{pseudo_elements}";
	@height_half: @height / 2;
	.arr-init(50% 100% auto auto, -@height_half -1px 0 0, @pseudo_elements);
	&@{select} {
		.tbd(transparent, @height_half);
		.bbd(transparent, @height_half);
		.rbd(extract(@color, 1), @width);
		_border-top-color: extract(@color, 2);
		_border-bottom-color: extract(@color, 2);
	}
}
.larr(@color, @width, @height, @position, @margin: 0, @pseudo_elements: before) when not (iskeyword(@position)) {
	@select: ~":@{pseudo_elements}";
	@height_half: @height / 2;
	.arr-init(@position, @margin, @pseudo_elements);
	&@{select} {
		.tbd(transparent, @height_half);
		.bbd(transparent, @height_half);
		.rbd(extract(@color, 1), @width);
		_border-top-color: extract(@color, 2);
		_border-bottom-color: extract(@color, 2);
	}
}
.rarr(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-left-color: extract(@color, 1);
		_border-top-color: extract(@color, 2);
		_border-bottom-color: extract(@color, 2);
	}
}
.rarr(@color, @width, @height, @pseudo_elements: before) {
	@select: ~":@{pseudo_elements}";
	@height_half: @height / 2;
	.arr-init(50% auto auto 100%, -@height_half 0 0 -1px, @pseudo_elements);
	&@{select} {
		.tbd(transparent, @height_half);
		.bbd(transparent, @height_half);
		.lbd(extract(@color, 1), @width);
		_border-top-color: extract(@color, 2);
		_border-bottom-color: extract(@color, 2);
	}
}
.rarr(@color, @width, @height, @position, @margin: 0, @pseudo_elements: before) when not (iskeyword(@position)) {
	@select: ~":@{pseudo_elements}";
	@height_half: @height / 2;
	.arr-init(@position, @margin, @pseudo_elements);
	&@{select} {
		.tbd(transparent, @height_half);
		.bbd(transparent, @height_half);
		.lbd(extract(@color, 1), @width);
		_border-top-color: extract(@color, 2);
		_border-bottom-color: extract(@color, 2);
	}
}
.tarr(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-bottom-color: extract(@color, 1);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}
.tarr(@color, @width, @height, @pseudo_elements: before) {
	@select: ~":@{pseudo_elements}";
	@width_half: @width / 2;
	.arr-init(auto auto 100% 50%, 0 0 -1px -@width_half, @pseudo_elements);
	&@{select} {
		.lbd(transparent, @width_half);
		.rbd(transparent, @width_half);
		.bbd(extract(@color, 1), @height);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}
.tarr(@color, @width, @height, @position, @margin: 0, @pseudo_elements: before) when not (iskeyword(@position)) {
	@select: ~":@{pseudo_elements}";
	@width_half: @width / 2;
	.arr-init(@position, @margin, @pseudo_elements);
	&@{select} {
		.lbd(transparent, @width_half);
		.rbd(transparent, @width_half);
		.bbd(extract(@color, 1), @height);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}
.barr(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-top-color: extract(@color, 1);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}
.barr(@color, @width, @height, @pseudo_elements: before) {
	@select: ~":@{pseudo_elements}";
	@width_half: @width / 2;
	.arr-init(100% auto auto 50%, -1px 0 0 -@width_half, @pseudo_elements);
	&@{select} {
		.lbd(transparent, @width_half);
		.rbd(transparent, @width_half);
		.tbd(extract(@color, 1), @height);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}
.barr(@color, @width, @height, @position, @margin: 0, @pseudo_elements: before) when not (iskeyword(@position)) {
	@select: ~":@{pseudo_elements}";
	@width_half: @width / 2;
	.arr-init(@position, @margin, @pseudo_elements);
	&@{select} {
		.lbd(transparent, @width_half);
		.rbd(transparent, @width_half);
		.tbd(extract(@color, 1), @height);
		_border-left-color: extract(@color, 2);
		_border-right-color: extract(@color, 2);
	}
}


// 镂空小箭头（IE8及以下浏览器不支持）
.arr2-init(@color, @size, @thickness, @position, @margin, @pseudo_elements) {
	@select: ~":@{pseudo_elements}";
	&@{select} {
		content: "";
		display: block;
		.sz(@size);
		.tbd(@color, @thickness);
		.lbd(@color, @thickness);
		position: absolute;
		top: extract(@position, 1);
		right: extract(@position, 2);
		bottom: extract(@position, 3);
		left: extract(@position, 4);
		margin: @margin;
	}
}
.larr2(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-color: @color;
	}
}
.larr2(@color, @size, @thickness: 2px, @position: auto, @margin: 0, @pseudo_elements: before) {
	.arr2-init(@color, @size, @thickness, @position, @margin, @pseudo_elements);
	@select: ~":@{pseudo_elements}";
	&@{select} {
		.rotate(-45deg);
	}
}
.rarr2(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-color: @color;
	}
}
.rarr2(@color, @size, @thickness: 2px, @position: auto, @margin: 0, @pseudo_elements: before) {
	.arr2-init(@color, @size, @thickness, @position, @margin, @pseudo_elements);
	@select: ~":@{pseudo_elements}";
	&@{select} {
		.rotate(135deg);
	}
}
.tarr2(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-color: @color;
	}
}
.tarr2(@color, @size, @thickness: 2px, @position: auto, @margin: 0, @pseudo_elements: before) {
	.arr2-init(@color, @size, @thickness, @position, @margin, @pseudo_elements);
	@select: ~":@{pseudo_elements}";
	&@{select} {
		.rotate(45deg);
	}
}
.barr2(@color, @pseudo_elements: before) { //仅用于改变箭头颜色
	@select: ~":@{pseudo_elements}";
	&@{select} {
		border-color: @color;
	}
}
.barr2(@color, @size, @thickness: 2px, @position: auto, @margin: 0, @pseudo_elements: before) {
	.arr2-init(@color, @size, @thickness, @position, @margin, @pseudo_elements);
	@select: ~":@{pseudo_elements}";
	&@{select} {
		.rotate(-135deg);
	}
}


// 粗箭头（IE8及以下浏览器不支持）
// 参数1：为箭头的宽度
// 参数2：为箭头的高度
// 参数3：为箭头的厚度
.larr3(@width, @height, @thickness) {
	@halfHeight: @height / 2;
	@width2: @width - @thickness;
	@angle: atan(@width2 / @halfHeight);
	width: @width2 / 2 + @thickness;
	padding-left: @width2 / 2;
	height: @height;
	.ftsz(0);
	&:before,
	&:after {
		content: "";
		display: block;
		width: @thickness;
		height: @halfHeight;
		.bgcl(#fff);
	}
	&:before {
		.skew(-@angle, 0);
	}
	&:after {
		.skew(@angle, 0);
	}
}
.rarr3(@width, @height, @thickness) {
	@halfHeight: @height / 2;
	@width2: @width - @thickness;
	@angle: atan(@width2 / @halfHeight);
	width: @width2 / 2 + @thickness;
	padding-left: @width2 / 2;
	height: @height;
	.ftsz(0);
	&:before,
	&:after {
		content: "";
		display: block;
		width: @thickness;
		height: @halfHeight;
		.bgcl(#fff);
	}
	&:before {
		.skew(@angle, 0);
	}
	&:after {
		.skew(-@angle, 0);
	}
}
.tarr3(@width, @height, @thickness) {
	@halfWidth: @width / 2;
	@height2: @height - @thickness;
	@angle: atan(@height2 / @halfWidth);
	width: @width;
	padding-top: @height2 / 2;
	height: @height2 / 2 + @thickness;
	.ftsz(0);
	&:before,
	&:after {
		content: "";
		.inbl;
		width: @halfWidth;
		height: @thickness;
		.bgcl(#fff);
	}
	&:before {
		.skew(0, -@angle);
	}
	&:after {
		.skew(0, @angle);
	}
}
.barr3(@width, @height, @thickness) {
	@halfWidth: @width / 2;
	@height2: @height - @thickness;
	@angle: atan(@height2 / @halfWidth);
	width: @width;
	padding-top: @height2 / 2;
	height: @height2 / 2 + @thickness;
	.ftsz(0);
	&:before,
	&:after {
		content: "";
		.inbl;
		width: @halfWidth;
		height: @thickness;
		.bgcl(#fff);
	}
	&:before {
		.skew(0, @angle);
	}
	&:after {
		.skew(0, -@angle);
	}
}



// 关闭按钮
.close-init(@border_color, @pattern_color, @background_color, @size, @radius) {
	@thickness: round(@size * .1 / 2) * 2;
	@length: @size - @thickness * 4;
	@innerSize: @size - @thickness * 2;

	position: relative;
	width: @innerSize;
	height: @innerSize;
	border: @thickness solid @border_color;
	border-radius: @radius;
	background: @background_color;
	cursor: pointer;

	&:before,
	&:after {
		content: "";
		display: block;
		width: @length;
		height: @thickness;
		font-size: 0;
		background: @pattern_color;
		.hvc(@length, @thickness);
	}
	&:before {
		.rotate(45deg);
	}
	&:after {
		.rotate(-45deg);
	}
}
.close(@size: 30px, @radius: 50%) when (isnumber(@size)) {
	.close-init(white, white, black, @size, @radius);
}
.close(@color, @size: 30px, @radius: 50%) when (length(@color) = 1) and (iscolor(@color)) {
	.close-init(@color, @color, black, @size, @radius);
}
.close(@color, @size: 30px, @radius: 50%) when (length(@color) = 2) {
	.close-init(extract(@color, 1), extract(@color, 1), extract(@color, 2), @size, @radius);
}
.close(@color, @size: 30px, @radius: 50%) when (length(@color) = 3) {
	.close-init(extract(@color, 1), extract(@color, 2), extract(@color, 3), @size, @radius);
}



// 加号按钮
.add-init(@border_color, @pattern_color, @background_color, @size, @radius) {
	@thickness: round(@size * .1 / 2) * 2;
	@length: @size - @thickness * 4;
	@innerSize: @size - @thickness * 2;

	position: relative;
	width: @innerSize;
	height: @innerSize;
	border: @thickness solid @border_color;
	border-radius: @radius;
	background: @background_color;
	cursor: pointer;

	&:before {
		content: "";
		display: block;
		width: @length;
		height: @thickness;
		font-size: 0;
		background: @pattern_color;
		.hvc(@length, @thickness);
	}
	&:after {
		content: "";
		display: block;
		width: @thickness;
		height: @length;
		font-size: 0;
		background: @pattern_color;
		.hvc(@thickness, @length);
	}
}
.add(@size: 30px, @radius: 50%) when (isnumber(@size)) {
	.add-init(@green, white, @green, @size, @radius);
}
.add(@color, @size: 30px, @radius: 50%) when (length(@color) = 1) and (iscolor(@color)) {
	.add-init(@green, @color, @green, @size, @radius);
}
.add(@color, @size: 30px, @radius: 50%) when (length(@color) = 2) {
	.add-init(extract(@color, 2), extract(@color, 1), extract(@color, 2), @size, @radius);
}
.add(@color, @size: 30px, @radius: 50%) when (length(@color) = 3) {
	.add-init(extract(@color, 1), extract(@color, 2), extract(@color, 3), @size, @radius);
}



// 减号按钮
.sub-init(@border_color, @pattern_color, @background_color, @size, @radius) {
	@thickness: round(@size * .1 / 2) * 2;
	@length: @size - @thickness * 4;
	@innerSize: @size - @thickness * 2;

	position: relative;
	width: @innerSize;
	height: @innerSize;
	border: @thickness solid @border_color;
	border-radius: @radius;
	background: @background_color;
	cursor: pointer;

	&:before {
		content: "";
		display: block;
		width: @length;
		height: @thickness;
		font-size: 0;
		background: @pattern_color;
		.hvc(@length, @thickness);
	}
}
.sub(@size: 30px, @radius: 50%) when (isnumber(@size)) {
	.sub-init(@red, white, @red, @size, @radius);
}
.sub(@color, @size: 30px, @radius: 50%) when (length(@color) = 1) and (iscolor(@color)) {
	.sub-init(@red, @color, @red, @size, @radius);
}
.sub(@color, @size: 30px, @radius: 50%) when (length(@color) = 2) {
	.sub-init(extract(@color, 2), extract(@color, 1), extract(@color, 2), @size, @radius);
}
.sub(@color, @size: 30px, @radius: 50%) when (length(@color) = 3) {
	.sub-init(extract(@color, 1), extract(@color, 2), extract(@color, 3), @size, @radius);
}



// 对勾
.hook-init(@color: #666, @size: 30px) {
	width: @size;
	height: @size;
	&:before {
		content: "";
		display: block;
		width: 40%;
		height: 70%;
		margin-left: 25%;
		border-right: solid @size*.1 @color;
		border-bottom: solid  @size*.1 @color;
		border-bottom-right-radius: @size*.1;
		.rotate(45deg);
	}
}
.hook(@size: 30px) when (isnumber(@size)) {
	.hook-init(#666, @size);
}
.hook(@color, @size: 30px) when (iscolor(@color)) {
	.hook-init(@color, @size);
}



// 叉
.fork-init(@color: #666, @size: 30px) {
	@thickness: round(@size * .1 / 2) * 2;

	position: relative;
	width: @size;
	height: @size;
	&:before,
	&:after {
		content: "";
		display: block;
		width: @size;
		height: @thickness;
		font-size: 0;
		background: @color;
		.hvc(@size, @thickness);
	}
	&:before {
		.rotate(45deg);
	}
	&:after {
		.rotate(-45deg);
	}
}
.fork(@size: 30px) when (isnumber(@size)) {
	.fork-init(#666, @size);
}
.fork(@color, @size: 30px) when (iscolor(@color)) {
	.fork-init(@color, @size);
}



// 立体字
.cube-text-init(@color) {
	@ftColor: lighten(@color, max(30%-lightness(@color),0%));
	color: @ftColor;
	text-shadow: 0  1px  0   darken(@ftColor, 10%),
				 0  2px  0   darken(@ftColor, 15%),
				 0  3px  0   darken(@ftColor, 20%),
				 0  4px  0   darken(@ftColor, 25%),
				 0  5px  0   darken(@ftColor, 30%),
				 0  6px  1px rgba(0, 0, 0, 0.1),
				 0  0    5px rgba(0, 0, 0, 0.1),
				 0  1px  3px rgba(0, 0, 0, 0.3),
				 0  3px  5px rgba(0, 0, 0, 0.2),
				 0  5px 10px rgba(0, 0, 0, 0.25),
				 0 20px 20px rgba(0, 0, 0, 0.15);
}
.cube-text(@color) {
	.cube-text-init(@color);
}
.cube-text(@color, @selectColor) {
	.cube-text-init(@color);
	&::-moz-selection { .cube-text-init(@selectColor); }
	&::selection { .cube-text-init(@selectColor); }
}